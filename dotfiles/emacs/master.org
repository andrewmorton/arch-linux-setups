* DONE Decide the sections under Emacs and System config to start
* TODO Move the emacs lisp from current init to master.org
* TODO Use Babel to export a custom init.el to ~/.config/emacs/init.el
* TODO Make Babel OVERWRITE an existing init.el file when it exports
* Emacs
** Init.el Provides
*** Needs Work
*** How do I make provides work?
** Package Management
*** General

#+begin_src emacs-lisp
  (setq package-enable-at-startup nil)

  ;; Set a custom el file to preserve my config
  (setq custom-file (expand-file-name "sys_custom.el" user-emacs-directory))
  (when (file-exists-p custom-file)
    (load custom-file))
#+end_src

Turn on Package manager And configure Repos to monitor

#+begin_src emacs-lisp
  (require 'package)

  (setq package-archives '(("melpa" . "https://melpa.org/packages/")
                           ("org" . "https://orgmode.org/elpa/")
                           ("elpa" . "https://elpa.gnu.org/packages/")))

  (package-initialize)
  (package-refresh-contents)

#+end_src

*** Use-Package config

Verify that Use-package is installed on startup

#+begin_src emacs-lisp

  (unless (package-installed-p 'use-package)
    (package-refresh-contents)
    (package-install 'use-package))
  (require 'use-package)

  ;; Sets use package to ensure packages are kept up to date always
  (setq use-package-always-ensure 't)

#+end_src
** Visual
*** General

#+begin_src emacs-lisp
  ;; Turn off startup message and turn off audible bell
  (setq inhibit-startup-message t)
  (setq visible-bell t)
#+end_src


*** Font

Choices here can be JetBrains Mono or any other monospaced font that is installed
#+begin_src emacs-lisp
  (set-face-attribute 'default nil
                      :font "JetBrains Mono:weight=extra-bold"
                      :height 170)
#+end_src

*** Themes
*** UI

#+begin_src emacs-lisp

  ;; turn off scroll bars
  (tool-bar-mode -1)
  (menu-bar-mode -1)
  (scroll-bar-mode -1)
  (set-fringe-mode 10)

  ;; Handle Line Numbers
  (column-number-mode)
  (global-display-line-numbers-mode t)

  ;; Turn off line numbers for certain things
  (dolist (mode '(org-mode-hook
                  term-mode-hook
                  eshell-mode-hook
                  shell-mode-hook))
    (add-hook mode (lambda () (display-line-numbers-mode 0))))

#+end_src

** Usability
*** Evil Mode

Install Evil Mode
[[https://github.com/emacs-evil/evil]]

#+begin_src emacs-lisp

  (use-package evil
    :ensure t
    :init
    (setq evil-want-C-u-scroll t)
    (setq evil-want-integration t)
    (setq evil-want-keybinding nil)
    :config
    (evil-mode t))

#+end_src

Install Evil collection, which integrates Evil mode with a bunch of other things.
[[https://github.com/emacs-evil/evil-collection]]

#+begin_src emacs-lisp

  (use-package evil-collection
    :after evil
    :config (evil-collection-init))

#+end_src

*** Searching
*** Keybindings

Make <escape> always quit
#+begin_src emacs-lisp

  (global-set-key (kbd "<escape>") 'keyboard-escape-quit)

#+end_src
*** Git
*** Documentation
*** Programming Languages
**** Generic/all
**** Terraform
**** Shell
**** Python
**** Rust
**** Powershell
**** Kubernetes
**** Docker
**** Node
**** Go
* System
